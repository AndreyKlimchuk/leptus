#+TITLE:    Start
#+AUTHOR:   Sina Samavati
#+EMAIL:    sina.samv@gmail.com
#+OPTIONS:  ^:nil

* Start

** Types

   #+BEGIN_SRC erlang
   Listener          = http | https | spdy
   AppName           = atom()
   HandlersOrAppName = Handlers | AppName
   #+END_SRC

** leptus functions

*** leptus:start_listener/2

     Starts leptus' dependencies and a listener of type ~Listener~.

     #+BEGIN_SRC erlang
     leptus:start_listener(Listener, HandlersOrAppName) -> {ok, pid()}
     #+END_SRC

     Note that if you use ~AppName~, Leptus will try to read
     ~AppName/priv/leptus.config~ file
     which should contain
     #+BEGIN_SRC erlang
     {handlers, Handlers}.
     {options, Options}.
     #+END_SRC

*** leptus:start_listener/3

     Starts leptus' dependencies and a listener of type ~Listener~.

     #+BEGIN_SRC erlang
     leptus:start_listener(Listener, Handlers, Options) -> {ok, pid()}
     #+END_SRC

** The OTP way

   The way everyone recommends for starting an OTP application:
   #+BEGIN_SRC erlang
   application:start(crypto),
   application:start(ranch),
   application:start(cowboy),
   application:start(leptus).
   #+END_SRC
   and then the function that is described above should be called to start a
   listener.
