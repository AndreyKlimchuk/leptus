2013-12-07  Sina Samavati  <sina.samv@gmail.com>

	* src/leptus_req.erl: fix specs

	* include/leptus.hrl: include cowboy_req:req()

2013-12-05  Sina Samavati  <sina.samv@gmail.com>

	* 0.2.0: fix application behaviour,
	add leptus_json bridge to work with either jiffy or jsx

	* src/leptus_handler.erl (init/3): change handler_init/4 call since {ok, State} only works at the moment

	* src/leptus_router.erl (handle_routes/2): fix spec

2013-12-04  Sina Samavati  <sina.samv@gmail.com>

	* src/leptus.erl: change http ref name to leptus_http
	start leptus top-level supervisor

	* src/leptus_app.erl (start/2): no longer calls leptus:start_http/0,
	only starts the top-level supervisor

2013-12-03  Sina Samavati  <sina.samv@gmail.com>

	* src/leptus_req.erl: add invoke/2 for calling cowboy_req:F(A) and getting the value using get_value/1

	* src/leptus_handler.erl: change http_method/1 to return method() | badarg,
	change handle_request/5 to call method_not_allowed/3 when getting badarg from http_method/1

2013-12-02  Sina Samavati  <sina.samv@gmail.com>

	* src/leptus_handler.erl: add content_type/1,
	change set_content_type/2 to use content_type/1 to avoide repeating a thing

2013-12-01  Sina Samavati  <sina.samv@gmail.com>

	* src/leptus_handler.erl: add set_content_type/2
	change Body spec, now it should be binary() | string() | {json, json_term()}
	fix Headers issue, no longer needs to be invoked as 'json' when replying in JSON

2013-11-29  Sina Samavati  <sina.samv@gmail.com>

	* src/leptus.erl (start_http/1): avoid starting 'reloader'

	* 0.1.1: fix parse transformation issue,
	add ./scripts/routes to display handlers, routes and allowed methods in terminal
	make code upgrade functionality work with minimal effort,
	not allowed methods minor change (internal),
	leptus_req.erl: change binding/2 to param/2 and bindings/1 to params/1.

2013-11-27  Sina Samavati  <sina.samv@gmail.com>

	* Change Module:allowed_methods/1 to return a bitstring of HTTP methods
	e.g. <<"GET, PUT">>

	* Add reloader.erl
	code upgrade functionality now works by re-compiling modules (reloader must be started).
