%%-*- mode: erlang -*-

Deps = fun() ->
               case lists:keyfind(deps, 1, CONFIG) of
                   false ->
                       [];
                   Else ->
                       Else
               end
       end,
RemoveJsx = fun() ->
                    {deps, L} = Deps(),
                    Config1 = CONFIG -- [{deps, L}],
                    L1 = case lists:keyfind(jsx, 1, L) of
                             false ->
                                 L;
                             Jsx ->
                                 L -- [Jsx]
                         end,
                    Config1 ++ [{deps, L1}]
            end,
RemoveJiffy = fun() ->
                      {deps, L} = Deps(),
                      Config1 = CONFIG -- [{deps, L}],
                      L1 = case lists:keyfind(jiffy, 1, L) of
                               false ->
                                   L;
                               Jiffy ->
                                   L -- [Jiffy]
                           end,
                      [{deps, L1}, {erl_opts, [{d, 'USE_JSX'}]}|Config1]
              end,

case (catch leptus_json:parser()) of
    jiffy ->
        RemoveJsx();
    jsx ->
        RemoveJiffy();
    _ ->
        case os:getenv("USE_JSX") of
            false ->
                RemoveJsx();
            _ ->
                RemoveJiffy()
        end
end.
